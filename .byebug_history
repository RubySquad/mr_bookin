continue
main_app.root_url
main_app.root_path
root_path
continue
root_path
continue
root_path
continue
whereamI
Books
root_path
continue
@rating
@rating.book_id = params[:book_id]
rating_params
@rating
@rating.user = current_user
@rating
next
params
current_user
continue
params
continue
params
continue
params
exit
page.html
next
page.html
page
exit
input.value
input = page.find('input#user_firstname')
page.html.has_content?("mockuser")
page.has_content?("mockuser")
page.have_content?("mockuser")
have_content("mockuser")
continue
next
have_content("mockuser")
form = page.find('form#new_user')
page.find('form#new_user')
page.find(form#new_user)
page.html
next
page.html
exit
page.html
next
page.html
continue
Order.group(:state)
orders
continue
orders
next
orders
next
continue
firstname
id
user
orders
next
orders
next
current_user
orders
next
orders
continue
next
orders
next
exit
session["devise.facebook_data"]
data
exit
self.role
next
self.role
next
exit
continue
exit
next
self.role
continue
next
page.html
next
user.password
user
exit
click_link('>')exit
page.find('div.carousel-inner').find_all('div.active')
click_link('>')
page.find('div.carousel-inner').find_all('div.active')
click_on('›')
page.find('div.carousel-inner').find_all('div.active')
click_link('›')
page.find('div.carousel-inner').find_all('div.active')
carousel.find_all('div.active')
click_link('›')
carousel.find_all('div.active')
click_link('›', href: '#bestsellerCarousel')
carousel.find_all('div.active')
click_link('›', href: '#bestsellerCarousel')
click_link('>', href: '#bestsellerCarousel')
click_link(nil, href: '#bestsellerCarousel')
click_link(nil, href: #bestsellerCarousel)
click_link(nil, href: page.find('a.right').path)
page.find('a.right').path
click_link(nil, href: 1)
page.find('div#bestsellerCarousel').click_link('next')
click_link('next')
click_link('a.right')
page.find('a.right').click()
page.find('a.right').click
page.find('a.right')
page.find('div.right')
page.find('div#bestsellerCarousel').click_link('.right')
page.find('div#bestsellerCarousel').click_link('right')
page.find('div#bestsellerCarousel').click_link('>')
page.find('div#bestsellerCarousel')
page.find_by_id('div#bestsellerCarousel')
click_link('>')
car_controls.last.click_link('>')
car_controls.last.click_link
car_controls.last.click
car_controls.last
carousel.find_all('div.item')[1]
carousel.find_all('div.active')
exit
car = carousel.find_all('div.item')[1]
car = carousel.find_all('div.item').last
car = carousel.find_all('div.item').first
car = carousel.find_all('div.item').second
car = carousel.find_all('div.item')
exit
car.find_all('div.item')
car.find_all('div.active')
car_controls = page.find_all('a.carousel-control')
car_controls = page.find('a.carousel-control')
car_controls = page.find('carousel-control')
page.html
page
car_controls = page.find('div.carousel-control')
car.find_all('div.active')
car.find_all('div.item active')
car.find_all('div.item').first.class
car.find_all('div.item').first
car.find_first('div.item')
car.find('div.item')
car.find_all('div.item')
car.find('div.item').count
car.find_all('div.item').count
car.find_all('div').count
car.find_all('div')
car.find_all
car = page.find('div.carousel-inner')
page.find('div.carousel-inner')
page.find_by_id('.carousel-inner')
page.find_by_id('carousel-inner')
page.find_by_id('bestsellerCarousel')
exit
page.has_selector?('div bestsellerCarousel')
page.has_selector?('bestsellerCarousel')
page.has_selector?('div#bestsellerCarousel')
page.has_xpath?('div#bestsellerCarousel')
page.has_xpath?('bestsellerCarousel')
page.has_content?('MrBookin')
page.has_content?('bestsellerCarousel')
page.has_selector?('bestsellerCarousel')
page.find_by_id('bestsellerCarousel')
page.find_by_id('content')
page.find('container')
page.html
page.innetHTML
page.content
page.text
p page
continue
cart.order_items
cart.order_items.select(:quantity)
cart.save
cart.order_items.select(:quantity)
cart.order_items
Order.find(session[:order_id])
session[:order_id]
Order.find(10)
cart
next
self.total_price
order_items.sum('quantity * price')
next
continue
total_price
self.total_price
elf.total_price
order_items.sum('quantity * price')
order_items
self
continue
order
continue
exit
next
continue
params
continue
params
continue
params
continue
 session[:order_id] ||= Order.create({shipping_address: '_', billing_address: '_'}).id
session[:order_id]
 session[:order_id] ||= Order.create({shipping_address: '_', billing_address: '_'}).id
Order.create({shipping_address: '_', billing_address: '_'})
session[:cart_id]
next
continue
Order.create({shipping_address: '_', billing_address: '_'})
a.save!
a = Order.new({shipping_address: '', billing_address: ''})
Order.create({shipping_address: '', billing_address: ''})
Order.create({shipping_address: '', billing_address: ''}).id
next
session[:cart_id]
session
continue
state
total_price
self.state
self
state
continue
item.blank?
item
next
order_items.where(book: book)
book
order_items
next
can_modify?
self
continue
exit
self
exit
@addresses
@user.addresses.select(:id,:default)
@user.addresses
